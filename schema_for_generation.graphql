type OwnershipContract @entity {
  id: ID! # ownership_contract
  laosContract: String  @index
  assets: [Asset]! @derivedFrom(field: "ownershipContract")
}

type Asset @entity {
  id: ID! # ownership_contract + token_id constraint unique missing
  ownershipContract: OwnershipContract!
  tokenId: BigInt!
  owner: String!
  transfers: [Transfer]! @derivedFrom(field: "asset")
}

type Transfer @entity {
  id: ID!
  asset: Asset!
  from: String!
  to: String!
  timestamp: DateTime!
  blockNumber: Int!
  txHash: String! @index
}

type LaosAsset @entity {
  id: ID!
  laosContract: String! @index
  tokenId: BigInt!
  initialOwner: String!
  createdAt: DateTime!
  metadata: String  @index
}

type Metadata @entity {
  id: ID!
  laosAsset: LaosAsset!
  tokenUri: TokenUri!
  blockNumber: Int!
  timestamp: DateTime!
  txHash: String! @index
}

type TokenUri @entity {
  id: ID! # token_uri
  fetchState: String! # pending, fail, done
  name: String
  description: String
  image: String
  attributes: [Attribute!]
  fetchedAt: DateTime
  metadata: [Metadata!]! @derivedFrom(field: "tokenUri")
}

type Attribute {
  traitType: String!
  value: String!
}
